# HOW-TO - S'occuper d'une issue

Cette partie a pour but de présenter de manière très rapide la gestion
d'une issue déjà existante et dont vous devez/désirez vous occuper. Il
s'agit vraiment d'une explication rapide et basique, et vous êtes
fortement invité à lire le reste de cette page lorsque vous en aurez
le temps.

## "Tiens, une issue que j'ai envie de résoudre !"

Félicitations pour votre engagment ! Afin que tout le monde sache que
vous travaillez sur cette issue et d'éviter que 2 personnes ne
travaillent sur la même chose en parallèle sans en avoir connaissance,
**passez le status de l'issue à _In progress_**

Vous étiez assigné à l'issue ? Très bien, ravi de voir que vous vous
occupez des tâches que l'ont vous donne.

Vous n'étiez pas assigné à l'issue et avez décidé de vous en occuper
comme ça ? **Pensez à changer le champ _Assignee_ de l'issue**.

## "Olala, c'est plus somplexe que prévu"

Une section **Notes** est disponible, et vous êtes libres de
l'utiliser afin d'informer de votre avancement, faire des remarques
sur les difficultés que vous rencontrez, etc.

## "J'ai fini o/"

Bravo, vous pouvez désormais **passer le status de l'issue à
Resolved** ! Si vous voulez, à des fins de logging, laisser une trace
de comment vous avez résolu un bug ou ce genre de choses, n'oubliez
pas la section **Notes**.

Si votre issue a bien été completée, un admin ou le responsable de la
conférence se chargera de passer l'issue à **Closed**. Voilà, vous
avez rendu service à GConfs !

# HOW-TO - Être responsable d'une conférence

## Bootstrap

### Clean-up

Les projects de conférences sont générés à partir d'un template regroupant
tout un ensemble d'issues se repétant régulièrement lors de l'organisation de
conférences. Certaines issues peuvent amenées à ne pas être utiles pour la
conférence dont vous êtes responsable, par exemple celles concernant les TPs.

Les responsables sont donc invités, lorsque la conférence dont ils ont la
charge est générée, a **faire un premier passage sur la liste des
issues afin de passer en _Rejected_ celles qui ne concernent pas la
conférence**, par exemple "Contacter VJN pour le TP" si aucun TP n'est prévu.

### Assignations

Une fois les issues inutiles rejetées, vous pouvez vous concentrer sur celles
existantes et les assigner à qui de droit : les issues concernant le sujet de
la conférence au conférencier, les issues concernant l'affiche à celui chargé
de créer l'affiche s'il a déjà été défini, les issues concernant tout ce qui
est fiche event à vous même, etc... En revanche, pour tout ce qui est
communication,

Rappel : vous pouvez voir les issues qui vont sont assignées sur [votre page
personnelle](http://redmine.gconfs.fr/my/page).

## Au quotidien

En tant que responsable, le Redmine vous permet normalement de gérer une grande
partie des étapes de la préparation d'une conférence, notamment via les moyens
suivants :

* **Notes** : vous pouvez laisser des notes dans les issues, n'hésitez pas à
  vous en servir pour repinger quelqu'un qui y serait assigner, voir où il en
  est, etc.
* Assigner les issues aux personnes concernées, même si la majorité 
* Tenir à jour le pad qui est normalement linké dans la description de la
  conférence. A terme, ceci sera migré sur un wiki dédié à GConfs

# Projects

## Hiérarchie

### Root projects

Les projects, que vous trouverez sur
[la page projects du Redmine](http://redmine.gconfs.fr/projects), sont à
l'heure actuelle divisés en 4 grandes parties :

* [Admin GConfs](http://redmine.gconfs.fr/projects/administration-de-l-association) :
  administration de l'association
* [Conférences](http://redmine.gconfs.fr/projects/conferences) : conférences
  organisées
* [Events](http://redmine.gconfs.fr/projects/events) : évènements de type JDMI,
  JPO, Forum des associations, etc.
* [SysAdmin](http://redmine.gconfs.fr/projects/sysadmin) : administration du
  serveur de GConfs et des services associés

### Versions des conférences

De nombreuses conférences se répètent chaque année, notamment celles pour les
Sups telles que C# ou BDSP. Comment gérer ceci via le Redmine ? Plusieurs
options s'offrent à nous :

Avoir un subproject par conférence et par année : on se retrouverait
donc par exemple avec l'architecture suivante :

    Conférences
    ├── BDSP 2014-2015
    ├── BDSP 2015-2016
    ├── C# 2014-2015
    ├── C# 2015-2016
    ├── C# 2016-2017
    └── Linux 2014-2015

Avoir un subproject par année, et encore en subproject les conférences
elles-mêmes

    Conférences
    ├── 2014-2015
    │   ├── BDSP
    │   ├── C#
    │   └── Linux
    ├── 2015-2016
    │   ├── BDSP
    │   ├── C#
    │   └── Linux
    └── 2016-2017
        ├── BDSP
        └── C#

Jusque-là, les hiérarchies résultantes sont plutôt hideuses, et surtout très
peu claires, surtout lorsque viendront s'empiler les conférences de chaque
année. Nous allons donc profiter d'une feature de Redmine, qui s'appelle les
**Versions** et qui permettra d'avoir une architecture simple, claire et
intuitive de la forme :

    Conférences
    ├── BDSP
    ├── C#
    └── Linux

## Versions

Les *Versions* sont des sortes de boîtes dans lesquells on peut empiler des
issues. Ainsi, la gestion de conférences d'années en années est grandement
faciliter : on duplique la boîte, change l'étiquette dessus de "n - n+1" à "n+1
- n+2", et on passe toutes les issues dedans à un status *New*. Voilà, on a
récupéré toutes les issues de l'année d'avant dans un état neuf, sans assignee,
etc. Cette gestion via les *Versions* offre encore d'autres avantages dont
notamment :

* Une visualisation aisée de l'avancement de l'organisation d'une conférence,
  via l'onglet **Roadmap**
* La possibilité de voir facilement les issues d'une année donnée avec les
  options de filtering

# Issues

Vous retrouverez dans cette partie des explications concernant chaque
champ d'une issue. La partie "Généralités" contient les bases et
informations nécessaires à la compréhension des issues que vous
verrez, la partie "Création" quant à elle regroupera les champs dont
vous n'avez, normalement, à vous soucier qu'à la création

## Généralités

### Tracker

4 types de trackers sont actuellement disponibles :

* Task
* Mail
* Enhancement
* Bug

La liste ci-dessus les représente par fréquence décroissante.

**Task** : tracker **par défaut**, qui sera utilisé probablement 80%
du temps.  Tout ce qu'on a à faire globalement, que ça soit d'un point
de vue administration de l'association ou organisation de conférences.

**Mail** : comme son nom l'indique, c'est un tracker dédié aux mails.
En effet, des issues telle que "mailer X pour Y raison" sont assez
fréquentes. Ainsi, on peut facilement filtrer par mail quand on à
10min à consacrer à GConfs.

**Enhancement** : Amélioration de choses **déjà existantes**. Vous
avez une idée pour improve le Redmine (Module, etc.), pour améliorer
notre framework de conférences, pour améliorer le déroulement des
réunions ou autre chose du genre ? C'est ce tracker qui vous intéresse !

**Bug** : Devrait être rarement utilisé. Actuellement, il a uniquement
servi lorsque Redmine envoyait des liens en localhost:5001/ au lieu de
redmine.gconfs.org/. Il peut servir pour des problèmes sur la ML, sur
le site, sur les pads, etc.

### Status

* New
* Reopened
* In progress
* Resolved
* Closed
* Rejected

Ces status représente le cycle de vie d'une issue. En général, il sera composé
de **New -> In progress -> Resolved -> Closed**.

**New** : c'est le status à la création d'une issue. Une fois ce status changé,
une issue ne doit normalement jamais y revenir, de par la présence d'un status
*Reopened*.

**Reopened** : idéalement, une note devrait toujours être ajoutée à l'issue
lors d'un changement de status à *reopened* expliquant pourquoi. Ce status
possède 2 intérêts principaux :

    * Ré-ouvrir une issue *closed* ou *rejected*, parce-qu'elle avait été
      *rejected* par erreur, ou que l'on s'est aperçu plus tard qu'elle n'était
      pas vraiment résolue
    * Redémarrer le cycle de vie de l'issue si son *assignee* l'a passé en
      *resolved* mais que l'admin qui a vérifié avant de passer à *closed* a
      jugé qu'elle n'était pas vraiment résolue

**In progress** : c'est l'*assignee* qui devrait passer une issue à ce status,
afin d'informer qu'il est en train de travailler dessus. Il est éventuellement
évitable pour les issues de tracker *mail* ou celles très courtes sur
lesquelles il n'y a aucun risque de concurrency, mais cela doit rester
exceptionnel.

**Resolved** : lorsqu'une issue est satisfaite, ce status est là pour en
notifier les personnes concernées, et constitue la dernière étape de la
réalisation d'une tâche avant la vérification finale.

**Closed** : ce status est celui fermant réellement une issue, après
vérification par une autre personne que celle l'ayant réalisé. Seuls 3 types de
users ont la possibilité de close une issue :

    * les admins
    * le responsable d'une conférence donnée
    * l'user ayant créé l'isue

**Rejected** : dernier status, ne pouvant être changé qu'en *reopened*. Il est
utilisé principalement pour :

    * Rejeter une issue qui n'a pas lieu d'être pour une conférence, après que
      le projet en question ait été généré depuis le template. Exemple : les
      issues concernant le TP pour une conférence n'en ayant pas
    * Rejeter une issue dont le sujet à été abandonné

### Assignee

Personne **assignée à l'issue**. L'idée est d'avoir soit quelqu'un
(par exemple le respo) déléguant une issue en nommant quelqu'un
assignee, soit d'avoir quelqu'un s'auto-assigner une tâche afin de la
réaliser.

## Création

### Subject

De manière générale, essayez de respecter le [principe
KISS](http://en.wikipedia.org/wiki/KISS_principle) pour vos titres d'issues :)

### Description

Détails concernant votre issue.

### Priority

5 niveaux de priorité sont définis :

* Bas
* Normal (valeur par **défaut**)
* Haut
* Urgent
* Immédiat

Les noms s'exprimants plutôt d'eux-même, nous ne nous attarderons pas là
dessus. Veillez à ne pas augmenter la priorité de n'importe quoi, car dans ce
cas ce champ perdrait beaucoup de son utilité !

### Category

Les catégories sont définies par projet. Elles sont un peu comme le champ
"Tracker" mais en plus général ou plus précis selon leur utilisation. Voici
celles actuellement définies, bien que susceptibles de changer :

* Admin GConfs : None
* Conférences : les catégories sont définies dans les project des conférences
  elles-mêmes, vous trouverez les suivantes :
  * ADM
  * Affiche
  * Communication
  * Contenu
  * Fiche Event
  * Setup
* Events : None
* SysAdmin : None

### Target version

Ce champ est **important**, en particulier lorsqu'il s'agit de issues
sur les conférences ou sur l'administration GConfs ! En effet, ce
champ nous permet d'assigner une "target version" à une issue, qui
correspondra la plupart du temps à l'année scolaire concernée. Cela
nous permet, entre autres, de pouvoir ne garder qu'un seul projet par
conférence, avec les issues de chaque année dans les versions
appropriées. Pour plus d'informations, reportez vous à la section...

### Files

Ce champ vous laisse la possibilité de joindre des fichiers à votre
issue. Attention : **à votre issue**. Ces fichiers ne seront visibles
que dans celle-ci, et doivent idéalement ne concerner que celle-ci.
Pour les affiches par exemples, vous préférerez le *Module* Files où
les uploads sont locaux au project. Exemple d'utilisation de ce champ
: vous créez une issue "Afficher le logo de notre partenaire Google
sur le site"; il est alors utile de joindre le logo en question à
votre issue, afin que la personne choisissant de la traiter n'ait plus
qu'à appliquer la task en elle-même.

### Parent task

Permet de signifier que votre issue est une sub-issue d'une autre. On
trouvera par exemple les tasks "Créer l'affiche" et "Envoyer l'affiche
à l'ADM pour impression" avec pour parent une task plus générique
"Affiche". Cela permet notamment de voir l'avancement d'une task
découpée en plusieurs.

### Start date

Par défaut lors de la création d'une issue, ce champ est rempli avec
la date du jour. Il n'est bien souvent pas très pertinent, veillez
donc à supprimer sa valeur s'il n'est pas utile pour les issues que
vous créez. En revanche, n'hésitez pas à le spécifier si une task ne
doit pas être entreprise avant une certaine date ! Par exemple, ne pas
lancer la communication pour une conférence plus d'un mois avant
celle-ci.

### Due date

Deadline d'une issue, ce devrait être clair pour tout le monde.
Ce champ est **important**, et permet notamment d'avoir des reminders
par mail lorsque la deadline approche.

### Estimated time

Il est possible de spécifier un temps estimé pour la complétion d'une
issue, comprendre pour les différents trackers :

* Réalisation d'une Task
* Envoi d'un Mail
* Mise en place d'un Enhancement
* Résolution d'un Bug

Remplir ce champ de manière précise permet à celui qui se verra
assigné l'issue de savoir combien de temps cela lui prendre. L'intérêt
est également pour ceux cherchant à aider l'association : "tiens, j'ai
10min devant moi, qu'est-ce que je pourrais faire pour GConfs ? -> Add
filter -> Estimated Time <= 10min".

### Watchers

Les "watchers" d'une issue sont les personnes qui recevront des
notifications concernant les modifications de l'issue au fur et à
mesure de son cycle de vie. Vous pouvez vous ajouter vous même comme
watcher à une issue si l'avancement de celle-ci vous intéresse, et
vous pouvez également ajouter des watchers lorsque vous créez une
issue afin que les personnes que vous jugez concernées soient tenues
au courant.

Par défaut, l'email notification level des accounts sur Redmine est à
"Only for things I watch or I'm involved in"; les watchers recevront
donc bien souvent les notifications par email : veillez à ne pas
ajouter des personnes autre que vous de manière exagérée !

### Private

Vous ne l'avez peut-être pas remarqué, mais une petite checkbox
"Private" est disponible dans le coin supérieur droit de l'interface
de création d'issue. Elle est décochée par défaut et pour la simple
raison que vous ne devriez pas à avoir à créer d'issue private. Vous
pouvez cependant vous en servir pour vous créer des sortes de
reminders tout en gardant à l'esprit que les administrateurs peuvent
malgré tout les voir, évitez donc de vous en servir à des fins hors
GConfs ou d'en abuser :)


